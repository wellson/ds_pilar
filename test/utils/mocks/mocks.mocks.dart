// Mocks generated by Mockito 5.4.4 from annotations
// in tmdb_app/test/utils/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tmdb_app/core/network/custom_dio_datasource.dart' as _i3;
import 'package:tmdb_app/modules/details/domain/entities/details/credits_detail_entity.dart'
    as _i10;
import 'package:tmdb_app/modules/details/domain/entities/details/movie_detail_entity.dart'
    as _i9;
import 'package:tmdb_app/modules/details/domain/repositories/i_get_details_repository.dart'
    as _i12;
import 'package:tmdb_app/modules/details/domain/usecase/get_details_usecase.dart'
    as _i14;
import 'package:tmdb_app/modules/details/infra/datasource/i_get_movies_datasource.dart'
    as _i8;
import 'package:tmdb_app/modules/home/domain/entities/movies/movie_entity.dart'
    as _i6;
import 'package:tmdb_app/modules/home/domain/entities/movies/search_entity.dart'
    as _i7;
import 'package:tmdb_app/modules/home/domain/repositories/i_get_movies_repository.dart'
    as _i11;
import 'package:tmdb_app/modules/home/domain/usecase/get_movies_usecase.dart'
    as _i13;
import 'package:tmdb_app/modules/home/infra/datasource/i_get_movies_datasource.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i3.DioClient {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> post(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> put(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #put,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> patch(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #patch,
            [uri],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<dynamic> delete(
    String? uri, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [IGetMoviesDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetMoviesDatasource extends _i1.Mock
    implements _i5.IGetMoviesDatasource {
  MockIGetMoviesDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesTrendingDay() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesTrendingDay,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesTrendingWeek() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesTrendingWeek,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesPopular() => (super.noSuchMethod(
        Invocation.method(
          #getMoviesPopular,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i7.SearchEntity?>?> searchMulti(String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMulti,
          [value],
        ),
        returnValue: _i4.Future<List<_i7.SearchEntity?>?>.value(),
      ) as _i4.Future<List<_i7.SearchEntity?>?>);
}

/// A class which mocks [IGetDetailsDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetDetailsDatasource extends _i1.Mock
    implements _i8.IGetDetailsDatasource {
  MockIGetDetailsDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i9.MovieDetailEntity?> getDetailsMovie(int? idMovie) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailsMovie,
          [idMovie],
        ),
        returnValue: _i4.Future<_i9.MovieDetailEntity?>.value(),
      ) as _i4.Future<_i9.MovieDetailEntity?>);

  @override
  _i4.Future<_i9.MovieDetailEntity?> getDetailsTv(int? idTv) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailsTv,
          [idTv],
        ),
        returnValue: _i4.Future<_i9.MovieDetailEntity?>.value(),
      ) as _i4.Future<_i9.MovieDetailEntity?>);

  @override
  _i4.Future<List<_i10.CreditsDetailEntity?>?> getCreditsMovie(int? idMovie) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreditsMovie,
          [idMovie],
        ),
        returnValue: _i4.Future<List<_i10.CreditsDetailEntity?>?>.value(),
      ) as _i4.Future<List<_i10.CreditsDetailEntity?>?>);

  @override
  _i4.Future<List<_i10.CreditsDetailEntity?>?> getCreditsTv(int? idTv) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreditsTv,
          [idTv],
        ),
        returnValue: _i4.Future<List<_i10.CreditsDetailEntity?>?>.value(),
      ) as _i4.Future<List<_i10.CreditsDetailEntity?>?>);
}

/// A class which mocks [IGetMoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetMoviesRepository extends _i1.Mock
    implements _i11.IGetMoviesRepository {
  MockIGetMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesTrendingDay() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesTrendingDay,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesTrendingWeek() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesTrendingWeek,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesPopular() => (super.noSuchMethod(
        Invocation.method(
          #getMoviesPopular,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i7.SearchEntity?>?> searchMulti(String? vallue) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMulti,
          [vallue],
        ),
        returnValue: _i4.Future<List<_i7.SearchEntity?>?>.value(),
      ) as _i4.Future<List<_i7.SearchEntity?>?>);
}

/// A class which mocks [IGetDetailsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetDetailsRepository extends _i1.Mock
    implements _i12.IGetDetailsRepository {
  MockIGetDetailsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i9.MovieDetailEntity?> getDetailsMovie(int? idMovie) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailsMovie,
          [idMovie],
        ),
        returnValue: _i4.Future<_i9.MovieDetailEntity?>.value(),
      ) as _i4.Future<_i9.MovieDetailEntity?>);

  @override
  _i4.Future<_i9.MovieDetailEntity?> getDetailsTv(int? idTv) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailsTv,
          [idTv],
        ),
        returnValue: _i4.Future<_i9.MovieDetailEntity?>.value(),
      ) as _i4.Future<_i9.MovieDetailEntity?>);

  @override
  _i4.Future<List<_i10.CreditsDetailEntity?>?> getCreditsMovie(int? idMovie) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreditsMovie,
          [idMovie],
        ),
        returnValue: _i4.Future<List<_i10.CreditsDetailEntity?>?>.value(),
      ) as _i4.Future<List<_i10.CreditsDetailEntity?>?>);

  @override
  _i4.Future<List<_i10.CreditsDetailEntity?>?> getCreditsTv(int? idTv) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreditsTv,
          [idTv],
        ),
        returnValue: _i4.Future<List<_i10.CreditsDetailEntity?>?>.value(),
      ) as _i4.Future<List<_i10.CreditsDetailEntity?>?>);
}

/// A class which mocks [IGetMoviesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetMoviesUsecase extends _i1.Mock implements _i13.IGetMoviesUsecase {
  MockIGetMoviesUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesTrendingDay() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesTrendingDay,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesTrendingWeek() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesTrendingWeek,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i6.MovieEntity?>?> getMoviesPopular() => (super.noSuchMethod(
        Invocation.method(
          #getMoviesPopular,
          [],
        ),
        returnValue: _i4.Future<List<_i6.MovieEntity?>?>.value(),
      ) as _i4.Future<List<_i6.MovieEntity?>?>);

  @override
  _i4.Future<List<_i7.SearchEntity?>?> searchMulti(String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMulti,
          [value],
        ),
        returnValue: _i4.Future<List<_i7.SearchEntity?>?>.value(),
      ) as _i4.Future<List<_i7.SearchEntity?>?>);
}

/// A class which mocks [IGetDetailsUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetDetailsUsecase extends _i1.Mock
    implements _i14.IGetDetailsUsecase {
  MockIGetDetailsUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i9.MovieDetailEntity?> getDetailsMovie(int? idMovie) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailsMovie,
          [idMovie],
        ),
        returnValue: _i4.Future<_i9.MovieDetailEntity?>.value(),
      ) as _i4.Future<_i9.MovieDetailEntity?>);

  @override
  _i4.Future<_i9.MovieDetailEntity?> getDetailsTv(int? idTv) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailsTv,
          [idTv],
        ),
        returnValue: _i4.Future<_i9.MovieDetailEntity?>.value(),
      ) as _i4.Future<_i9.MovieDetailEntity?>);

  @override
  _i4.Future<List<_i10.CreditsDetailEntity?>?> getCreditsMovie(int? idMovie) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreditsMovie,
          [idMovie],
        ),
        returnValue: _i4.Future<List<_i10.CreditsDetailEntity?>?>.value(),
      ) as _i4.Future<List<_i10.CreditsDetailEntity?>?>);

  @override
  _i4.Future<List<_i10.CreditsDetailEntity?>?> getCreditsTv(int? idTv) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreditsTv,
          [idTv],
        ),
        returnValue: _i4.Future<List<_i10.CreditsDetailEntity?>?>.value(),
      ) as _i4.Future<List<_i10.CreditsDetailEntity?>?>);
}
